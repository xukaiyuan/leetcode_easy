{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int search(int[] nums, int target) \{\
        return find(nums, 0, nums.length - 1, target);\
    \}\
    \
    public int find(int[] nums, int l, int r, int target)\
    \{\
        if(l > r) return -1;\
        \
            int mid = (r - l) / 2 + l;\
            if(nums[mid] == target) return mid;\
             if(nums[mid] < nums[r])\
            \{\
                if(nums[mid] < target && target <= nums[r]) return find(nums, mid + 1, r, target);\
                else return find(nums, l, mid - 1, target);\
            \}\
            else \
            \{\
                if(nums[l] <= target && target < nums[mid]) return find(nums, l, mid - 1, target);\
                else return find(nums, mid + 1, r, target);\
            \}\
        \}\
        \
       \
    \
    \
\}}