{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) \{\
        if(l1 == null) return l2;\
        if(l2 == null) return l1;\
        \
        if(l1.val <= l2.val) \
        \{\
            ListNode re = new ListNode(l1.val);\
            re.next = mergeTwoLists(l1.next, l2);\
            return re;\
        \}\
        else\
        \{\
            ListNode re = new ListNode(l2.val);\
            re.next = mergeTwoLists(l1, l2.next);\
            return re;\
        \}\
    \}\
\}}