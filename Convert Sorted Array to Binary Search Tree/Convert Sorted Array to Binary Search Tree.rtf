{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public TreeNode sortedArrayToBST(int[] nums) \{\
        if(nums.length == 0) return null;\
        TreeNode result = insert(nums, 0, nums.length - 1);\
        return result;\
    \}\
    \
    public TreeNode insert(int[] nums, int low, int high)\
    \{\
        if(low > high) return null;\
        int mid = (low + high)/2;\
        TreeNode re = new TreeNode(nums[mid]);\
        re.left = insert(nums, low, mid - 1);\
        re.right = insert(nums, mid + 1, high);\
        return re;\
    \}\
\}}