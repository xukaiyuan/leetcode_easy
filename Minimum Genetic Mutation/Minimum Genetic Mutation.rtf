{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int minMutation(String start, String end, String[] bank) \{\
        Set<String> b = new HashSet();\
        for(String x:bank) b.add(x);\
        if(start.length() != end.length()) return -1;\
        char[] charset = new char[]\{'A', 'T', 'G', 'C'\};\
        \
        Set<String> visited = new HashSet();\
        Queue<String> q = new LinkedList();\
        visited.add(start);\
        q.offer(start);\
        \
        int level = 0;\
        while(!q.isEmpty())\
        \{\
            int size = q.size();\
            while(size > 0)\
            \{\
                String cur = q.poll();\
                if(cur.equals(end)) return level;\
                \
                char [] cu = cur.toCharArray();\
                for(int i = 0; i < cu.length; i++)\
                \{\
                    char tmp = cu[i];\
                    for(char y:charset)\
                    \{\
                        cu[i] = y;\
                        String t = new String(cu);\
                        if(b.contains(t) && !visited.contains(t)) \
                        \{\
                            q.offer(t);\
                            visited.add(t);\
                        \}\
                    \}\
                    cu[i] = tmp;\
                \}\
                size--;\
            \}\
            level++;\
        \}\
        return -1;\
        \
    \}\
\}}