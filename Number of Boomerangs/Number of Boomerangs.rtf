{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int numberOfBoomerangs(int[][] points) \{int res = 0;\
\
    Map<Integer, Integer> map = new HashMap<>();\
    for(int i=0; i<points.length; i++) \{\
        for(int j=0; j<points.length; j++) \{\
            if(i == j)\
                continue;\
            \
            int d = calDistance(points[i], points[j]);                \
            map.put(d, map.getOrDefault(d, 0) + 1);\
        \}\
        \
        for(int val : map.values()) \{\
            res += val * (val-1);\
        \}            \
        map.clear();\
    \}\
    \
    return res;\
    \}\
    \
    public int calDistance(int[] point1, int[] point2)\
    \{\
        int dx = point1[0] - point2[0];\
        int dy = point1[1] - point2[1];\
        return (dx * dx + dy * dy);\
    \}\
    \
\}}