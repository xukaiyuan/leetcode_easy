{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public int sumOfLeftLeaves(TreeNode root) \{\
        if(root == null) return 0;\
        int re = 0;\
        Stack<TreeNode> s = new Stack<TreeNode>();\
        s.push(root);\
        while(!s.isEmpty())\
        \{\
            TreeNode tmp = s.pop();\
            if(tmp.left != null) \
            \{\
                if(tmp.left.left == null && tmp.left.right == null) re = re + tmp.left.val;\
                else s.push(tmp.left);\
            \}\
            if(tmp.right != null) \
            \{\
                if(tmp.right.left != null || tmp.right.right != null) s.push(tmp.right);\
            \}\
            \
        \}\
        return re;\
    \}\
\}}