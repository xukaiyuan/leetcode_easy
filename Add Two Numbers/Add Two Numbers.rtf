{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) \{\
        int c = 0;\
        ListNode cur = new ListNode(-1);\
        ListNode re = cur;\
        int carry = 0;\
        while(l1 != null || l2 != null || carry != 0)\
        \{\
            ListNode tmp = new ListNode(-1);\
            if(l1 == null && l2 == null)\
            \{\
                tmp.val = carry;\
                cur.next = tmp;\
                cur = cur.next;\
                carry = 0;\
            \}\
            else if(l1 == null)\
            \{\
                tmp.val = (l2.val + carry) % 10;\
                cur.next = tmp;\
                cur = cur.next;\
                carry = (l2.val + carry) / 10;\
            \}\
            else if(l2 == null)\
            \{\
                tmp.val = (l1.val + carry) % 10;\
                cur.next = tmp;\
                cur = cur.next;\
                carry = (l1.val + carry) / 10;\
            \}\
            else\
            \{\
                tmp.val = (l1.val + l2.val + carry) % 10;\
                cur.next = tmp;\
                cur = cur.next;\
                carry = (l1.val + l2.val + carry) / 10;\
            \}\
            if(l1 != null) l1 = l1.next;\
            if(l2 != null) l2 = l2.next;\
        \}\
        return re.next;\
    \}\
\}}