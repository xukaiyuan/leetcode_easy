{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class MinStack \{\
    private Stack<Integer> s = new Stack<Integer>();\
    int min = Integer.MAX_VALUE;\
    /** initialize your data structure here. */\
    public MinStack() \{\
        \
    \}\
    \
    public void push(int x) \{\
        \
        if(x <= min)\
        \{\
            s.push(min);\
            min = x;\
        \}\
        s.push(x);\
    \}\
    \
    public void pop() \{\
             \
        if(s.pop() == min)\
        \{\
            min = s.pop();\
        \}\
        \
        \
    \}\
    \
    public int top() \{\
         return s.peek();\
        \
    \}\
    \
    public int getMin() \{\
        return min;\
    \}\
\}\
\
/**\
 * Your MinStack object will be instantiated and called as such:\
 * MinStack obj = new MinStack();\
 * obj.push(x);\
 * obj.pop();\
 * int param_3 = obj.top();\
 * int param_4 = obj.getMin();\
 */}