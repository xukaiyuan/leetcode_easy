{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int[] nextGreaterElement(int[] nums1, int[] nums2) \{\
        int[] res = new int[nums1.length];\
        HashMap<Integer, Integer> h = new HashMap<Integer, Integer>();\
        Stack<Integer> s = new Stack<Integer>();\
        for(int num: nums2)\
        \{\
            while(!s.isEmpty() && num > s.peek())\
                h.put(s.pop(), num);\
            s.push(num);\
        \}\
        for(int i = 0; i < nums1.length; i++)\
        \{\
            res[i] = h.getOrDefault(nums1[i], -1);\
        \}\
        return res;\
    \}\
\}}