{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
class Solution \{\
    public int removeDuplicates(int[] nums) \{\
        Stack<Integer> re = new Stack<Integer>(); \
        if(nums.length == 0) return 0;\
        if(nums.length == 1) return 1;\
        int length = 0;\
        re.push(nums[0]);\
        for(int i = 1; i < nums.length; i++)\
        \{\
            if(nums[i] == re.peek()) continue;\
            else \{\
                re.push(nums[i]);\
                length++;\
                nums[length] = re.peek();\
            \}\
        \}\
        \
        return length + 1;\
\
    \}\
\}}