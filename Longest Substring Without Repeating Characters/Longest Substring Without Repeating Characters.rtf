{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int lengthOfLongestSubstring(String s) \{\
        Set<Character> set = new HashSet<Character>();\
        int i = 0; \
        int j = 0;\
        int re = 0;\
        while(i < s.length() && j < s.length())\
        \{\
            if(set.contains(s.charAt(j)))\
            \{\
                set.remove(s.charAt(i));\
                i++;\
            \}\
            else\
            \{\
                set.add(s.charAt(j));\
                j++;\
            \}\
            re = Math.max(re, j - i);\
        \}\
        \
        return re;\
    \}\
\}}